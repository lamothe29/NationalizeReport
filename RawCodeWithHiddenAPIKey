package studentMgmt;


import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
//import com.opencsv.CSVWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.opencsv.CSVWriter;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.net.MalformedURLException;
import java.net.URL;


public class Reporter {
	
	 private static HttpURLConnection connectionHTTP;
	 	 
	 //Method to connect to SQLite
	 public static Connection connect() {
		    Connection con = null; 
		    try {
		      Class.forName("org.sqlite.JDBC");
		      con = DriverManager.getConnection("jdbc:sqlite:/Users/kylelamothe/Documents/SQLite/sample_data.sqlite"); // connecting to our database
		      System.out.println("Connected!");
		    } catch (ClassNotFoundException | SQLException e ) {
		      
		      System.out.println(e+"");
		    }
		    
		    return con; 
		  }

	 
	 //SQLite command to return data from database without phone extensions
	 public static ArrayList<Student> selectALL(Connection con) throws SQLException {
		 //String sql1 = "SELECT * FROM students;";
			
		 	String sql1 = "SELECT stu_id, first_name, last_name, email, CASE WHEN phone LIKE '%x%' THEN substr(phone, 1, (instr(phone, 'x') -1 )) ELSE phone END AS phone, dob  FROM students;";

			Statement statement1 = con.createStatement();
				 
			ResultSet result = statement1.executeQuery(sql1);
			
			ArrayList<Student> list = new ArrayList<Student>();
			
			
			while(result.next()) {
				
				Student bob = new Student();
				
				bob.studentID = result.getString("stu_id");
				bob.firstName = result.getString("first_name");
				bob.lastName = result.getString("last_name");
				bob.email = result.getString("email");
				bob.phone = result.getString("phone");
				bob.dob = result.getString("dob");	
				
				
				list.add(bob);
				
				}	return list;
	 }
	 


	
	 
	
	 
	
	public static void main(String[] args) throws JSONException, SQLException, IOException, InterruptedException{
	
		
		//connecting to SQLite database
		Connection con = Reporter.connect();
		
		//Initial list with student objects and data from database
		ArrayList<Student> students = Reporter.selectALL(con);
		 
		String name1 = null;
		String name2 = null;
		String name3 = null;
		String name4 = null;
		String name5 = null;
		String name6 = null;
		String name7 = null;
		String name8 = null;
		String name9 = null;
		String name10 = null;
		
	
		
		//Preparing to create CSV file (needed to be outside of for loop)
		String path = "./project3.csv";
		File file = new File(path);
		String[] columnTitle = { "stu_id", "first_name", "last_name", "email", "phone", "dob", "country_id"};
		
		FileWriter outputFile = new FileWriter(file);
		CSVWriter writer = new CSVWriter(outputFile);
		
		writer.writeNext(columnTitle);
		
		

		int end = students.size();
		int batchsize = 10;
		int remainder = end % batchsize;
		
		
		for (int counter = 0; counter < end; counter += 10) {
			
			int cutoff = counter + remainder;
			
			
			
			String sender = "https://api.nationalize.io/?name=" + name1;
			
			
			if (  (cutoff < end ) ||   (cutoff == end && remainder <= 8)) {
				name1 = students.get(counter + 0).firstName;
				name2 = students.get(counter + 1).firstName;
				name3 = students.get(counter + 2).firstName; 
				name4 = students.get(counter + 3).firstName;
				name5 = students.get(counter + 4).firstName;
				name6 = students.get(counter + 5).firstName;
				name7 = students.get(counter + 6).firstName;
				name8 = students.get(counter + 7).firstName;
				 sender = "https://api.nationalize.io/?name=" + name1 + "&name=" + name2 + "&name=" + name3 + "&name=" + name4 + "&name=" + name5 + "&name=" + name6 +
						"&name=" + name7  + "&name=" + name8 + "&apikey=************************”;
				 
			}
			
			if (  (cutoff < end ) ||   (cutoff == end && remainder == 9)) {
				name1 = students.get(counter + 0).firstName;
				name2 = students.get(counter + 1).firstName;
				name3 = students.get(counter + 2).firstName; 
				name4 = students.get(counter + 3).firstName;
				name5 = students.get(counter + 4).firstName;
				name6 = students.get(counter + 5).firstName;
				name7 = students.get(counter + 6).firstName;
				name8 = students.get(counter + 7).firstName;
				name9 = students.get(counter + 8).firstName;
				sender = "https://api.nationalize.io/?name=" + name1 + "&name=" + name2 + "&name=" + name3 + "&name=" + name4 + "&name=" + name5 + "&name=" + name6 +
						"&name=" + name7  + "&name=" + name8  + "&name=" + name9 + "&apikey=*************************";
				
			}
			
			
			
			if (  (cutoff < end ) ||   (remainder == 0)){
				name1 = students.get(counter + 0).firstName;
				name2 = students.get(counter + 1).firstName;
				name3 = students.get(counter + 2).firstName; 
				name4 = students.get(counter + 3).firstName;
				name5 = students.get(counter + 4).firstName;
				name6 = students.get(counter + 5).firstName;
				name7 = students.get(counter + 6).firstName;
				name8 = students.get(counter + 7).firstName;
				name9 = students.get(counter + 8).firstName;
				name10 = students.get(counter + 9).firstName;
				sender = "https://api.nationalize.io/?name=" + name1 + "&name=" + name2 + "&name=" + name3 + "&name=" + name4 + "&name=" + name5 + "&name=" + name6 +
						"&name=" + name7  + "&name=" + name8  + "&name=" + name9  + "&name=" + name10 + "&apikey=******************************";
				
			}
			
	
		
		
		
			
			
			//Preparing to Parse the Response from the Nationalize.IO API
			BufferedReader reader;
			String line;
			StringBuffer responseContent = new StringBuffer();
			
				//Creating HTTP Connection
				URL url = new URL(sender);
				connectionHTTP = (HttpURLConnection) url.openConnection();
				connectionHTTP.setRequestMethod("GET");
				connectionHTTP.setConnectTimeout(5000);
				connectionHTTP.setReadTimeout(5000);
				
				int status = connectionHTTP.getResponseCode();
//				if (status == 200) {System.out.println("Connected!");}
				
				if (status > 299) {
					reader = new BufferedReader(new InputStreamReader(connectionHTTP.getErrorStream()));
					while((line = reader.readLine()) != null) {	
						responseContent.append(line);
					} reader.close();
				} else {
						
						reader = new BufferedReader(new InputStreamReader(connectionHTTP.getInputStream()));
						while((line = reader.readLine()) != null) {	
							responseContent.append(line);
						} reader.close();
					}
						
				String responses = responseContent.toString();
				//System.out.println(responses);
				//ArrayList<Student> dataList = parse(responses, students);
				
				
				
				
				//Parsing JSon response from API
				try {
					
					JSONArray tenStudents = new JSONArray(responses);
					
					
					for (int i = 0; i < tenStudents.length() ; i++)
					{
						JSONObject student = tenStudents.getJSONObject(i);
						//String name =  student.getString("name");
						JSONArray country = student.getJSONArray("country");
						
						//Assigning the JSon's object property to a String
						String country_id = country.getJSONObject(0).getString("country_id");
						

						//Assigning the country_id value to each student in the batch of 10
						students.get(counter + i).setCountryID(country_id);
						
					
					
						
						//System.out.println("My name is: " + name + " country_id: " + country_id);
						
					}
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} 
				
		}	
		
		
		//Now that the for loop is done, the students table should have all the info it needs
		//To write a CSV, we need arrays to enter as rows. So below I'm iterating through the students table and
		// and placing each property value in a column (an index of the array). Each array represents a student.
		
		for (int j =0; j < students.size(); j++) {
					
					
					String[] arr = new String[7];
					
					arr[0] = students.get( j).getStudentID();
					arr[1] = students.get(j).getFirstName();
					arr[2] = students.get( j).getLastName();
					arr[3] = students.get( j).getEmail();
					arr[4] = students.get(j).getPhone();
					arr[5] = students.get( j).getDob();
					arr[6] = students.get( j).getCountryID();
					//System.out.println(students.get(( j)).getCountryID());
					
					//csvData.add(counter + j + 1 , arr);
					
					writer.writeNext(arr);
					
				
		}  
		
				writer.close();
				connectionHTTP.disconnect();
				
		
			
			}}

package studentMgmt;

import java.net.URL;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;


public class Nationalize {

	
	private static HttpURLConnection connectionHTTP;
	static String nameSeparator = "&name=";
	static String apiKey = "&apikey=717d0734a0c1e4df6624656de14a4c15";
	
	
	public static ArrayList<ArrayList<Student>> createBatches(ArrayList<Student> students) throws IOException{
		
		int end = students.size();
		int batchSize = 10;
		int remainder = end % batchSize;
	
			
		ArrayList<ArrayList<Student>> batchList = new ArrayList<ArrayList<Student>>();
	
		for (int counter = 0; counter < end; counter += 10) {	
			int cutoff = counter + remainder;
			ArrayList<Student> batchOfStudents = new ArrayList<Student>();	
			if (cutoff < end) {
				for (int batchCounter = 0; batchCounter < 10; batchCounter++) {
					batchOfStudents.add(students.get(batchCounter + counter));
				} batchList.add(batchOfStudents);
				
			}else {
				for (int batchCounter = 0; batchCounter< remainder; batchCounter++) {
					
					batchOfStudents.add(students.get(batchCounter + counter));
					
				} batchList.add(batchOfStudents);
					
				}
	
		
		} return batchList;
	}
	
	
	
	public static String createSenderURL(ArrayList<Student> studentBatch) throws IOException {

		
		String senderURL = "https://api.nationalize.io/?";
		int batchCounter = 1;
		
		for (Student student : studentBatch) {
			
			senderURL += nameSeparator + student.firstName;
			
			if (batchCounter == studentBatch.size()) {
				senderURL += apiKey; }
			
			batchCounter++;	
		}return senderURL;
	}
			
	
	
	
	
	
	public static String getStringFromAPI(String senderLink) throws IOException {
	
		BufferedReader reader;
		String line;
		StringBuffer responseContent = new StringBuffer();
		URL url = new URL(senderLink);
		connectionHTTP = (HttpURLConnection) url.openConnection();
		connectionHTTP.setRequestMethod("GET");	
		reader = new BufferedReader(new InputStreamReader(connectionHTTP.getInputStream()));
		while((line = reader.readLine()) != null) {	
						responseContent.append(line);
					} reader.close();
		String responses = responseContent.toString();
		
		connectionHTTP.disconnect();
		return responses;
	}
	
	
	public static ArrayList<String> parseResponse(String APIResponse){
		
		ArrayList<String> countryIDBatch = new ArrayList<String>();
		
		try {
			
			JSONArray tenStudents = new JSONArray(APIResponse);
			
			
			for (int i = 0; i < tenStudents.length() ; i++)
			{
				JSONObject student = tenStudents.getJSONObject(i);
				JSONArray country = student.getJSONArray("country");
				
				String country_id = country.getJSONObject(0).getString("country_id");
				
				countryIDBatch.add(country_id);
				
				
			}
		} catch (JSONException e) { e.printStackTrace();} 
		
			return countryIDBatch;
		
	}
	
	public static void setCountryForEachBatch(ArrayList<ArrayList<Student>> batchList, ArrayList<ArrayList<String>> countryBatch ) {
		
		
		for (int batchNumber = 0; batchNumber < batchList.size(); batchNumber++) {
			
			
			for (int studentInBatch = 0; studentInBatch < batchList.get(batchNumber).size(); studentInBatch++) {
				
				
			batchList.get(batchNumber).get(studentInBatch).setCountryID(countryBatch.get(batchNumber).get(studentInBatch));
				
			
			
			
		}
		}
		}
	


}
		
		
